<?php
/**
 * Model object generated by: Skipper (http://www.skipper18.com)
 * Do not modify this file manually.
 */

namespace App\Models\AbstractModels;

abstract class AbstractUser extends \Illuminate\Foundation\Auth\User
{
    /**
     * Primary key type.
     *
     * @var string
     */
    protected $keyType = 'uuid';

    /**
     * Primary key is non-autoincrementing.
     *
     * @var bool
     */
    public $incrementing = false;

    /**
     * The model's default values for attributes.
     *
     * @var array
     */
    protected $attributes = ['banned' => false];

    /**
     * The attributes that should be cast to native types.
     *
     * @var array
     */
    protected $casts = [
        'id' => 'string',
        'name' => 'string',
        'email' => 'string',
        'email_verified_at' => 'datetime',
        'password' => 'string',
        'remember_token' => 'string',
        'banned' => 'boolean',
        'created_at' => 'datetime',
        'updated_at' => 'datetime',
    ];

    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = [
        'name',
        'email',
        'password',
    ];

    public function relayProviders()
    {
        return $this->hasMany(\App\Models\RelayProvider::class, 'user_id', 'id');
    }

    public function comments()
    {
        return $this->morphMany(\App\Models\Comment::class, 'userable', 'userable_type', 'userable_id');
    }

    public function messages()
    {
        return $this->morphMany(\App\Models\Message::class, 'userable', 'userable_type', 'userable_id');
    }

    public function recordings()
    {
        return $this->morphMany(\App\Models\Recording::class, 'userable', 'userable_type', 'userable_id');
    }

    public function ratings()
    {
        return $this->morphMany(\App\Models\Rating::class, 'userable', 'userable_type', 'userable_id');
    }
}
