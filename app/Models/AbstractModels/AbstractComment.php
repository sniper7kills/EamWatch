<?php
/**
 * Model object generated by: Skipper (http://www.skipper18.com)
 * Do not modify this file manually.
 */

namespace App\Models\AbstractModels;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Database\Eloquent\Relations\HasMany;
use Illuminate\Database\Eloquent\Relations\MorphedByMany;
use Illuminate\Database\Eloquent\Relations\MorphTo;
use Illuminate\Database\Eloquent\Relations\MorphToMany;

abstract class AbstractComment extends Model
{
    /**
     * Primary key type.
     *
     * @var string
     */
    protected $keyType = 'uuid';

    /**
     * Primary key is non-autoincrementing.
     *
     * @var bool
     */
    public $incrementing = false;

    /**
     * The attributes that should be cast to native types.
     *
     * @var array
     */
    protected $casts = [
        'id' => 'string',
        'userable_id' => 'string',
        'userable_type' => 'string',
        'parent_comment_id' => 'string',
        'message' => 'string',
        'created_at' => 'datetime',
        'updated_at' => 'datetime',
        'deleted_at' => 'datetime',
    ];

    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = ['message'];

    public function comment(): BelongsTo
    {
        return $this->belongsTo(\App\Models\Comment::class, 'parent_comment_id', 'id');
    }

    public function comments(): HasMany
    {
        return $this->hasMany(\App\Models\Comment::class, 'parent_comment_id', 'id');
    }

    public function userable(): MorphTo
    {
        return $this->morphTo('userable', 'userable_type', 'userable_id');
    }

    public function messages(): MorphToMany
    {
        return $this->morphedByMany(\App\Models\Message::class, 'commentable', 'commentables', 'comment_id', 'commentable_id', 'id', 'id');
    }

    public function recordings(): MorphedByMany
    {
        return $this->morphedByMany(\App\Models\Recording::class, 'commentable', 'commentables', 'comment_id', 'commentable_id', 'id', 'id');
    }
}
